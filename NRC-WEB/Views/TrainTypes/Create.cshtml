@using NRC_WEB.Models
@model NRC_WEB.Models.TrainType

@{
    ViewBag.Title = "Create Train Type";
    var travelClasses = (IEnumerable<TravelClass>)ViewBag.TravelClasses;
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>TrainType</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Capacity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Capacity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Capacity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Is Active", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsActive)
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

            @*@if (travelClasses != null && travelClasses.Any())
            {
                <table>
                    <thead>
                        <tr>
                            <td>Travel Class</td>
                            <td>Number Of Seats</td>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < travelClasses.Count(); i++)
                        {
                            <tr>
                                <td><label class="control-label">@travelClasses.ElementAt(i).Name:</label></td>
                            <td>
                                @Html.Hidden(string.Format("[{0}].TravelClassId", i), travelClasses.ElementAt(i).Id)
                                <input name="NumberOfSeats" type="number" class="form-control" />
                            </td>
                        </tr>
                        }
                    </tbody>
                </table>
            }*@

            @if (travelClasses != null && travelClasses.Any())
            {
                
                        for (int i = 0; i < travelClasses.Count(); i++)
                        {

                            <div class="form-group">
                                @Html.Label(string.Format("{0} seats", travelClasses.ElementAt(i).Name), htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.Hidden(string.Format("[{0}].TravelClassId", i), travelClasses.ElementAt(i).Id)
                                    @*<input name="NumberOfSeats" type="number" class="form-control" />*@
                                    @Html.TextBox(string.Format("[{0}].NumberOfSeats", i), null, htmlAttributes: new { @class = "form-control", type="number" })
                                </div>
                            </div>                        
                        }
                
            }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
